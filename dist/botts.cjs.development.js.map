{"version":3,"file":"botts.cjs.development.js","sources":["../src/structures/Logger.ts","../src/structures/BotClass.ts","../src/structures/Command.ts","../src/structures/Event.ts"],"sourcesContent":["import pkg from 'chalk';\r\nconst { red, yellow, blue, magenta, green } = pkg;\r\n\r\nexport enum LogLevel {\r\n\tError = 0,\r\n\tWarning,\r\n\tInfo,\r\n\tDebug,\r\n\tVerbose,\r\n}\r\n\r\ntype LevelStrings = keyof typeof LogLevel;\r\n\r\nexport class Logger {\r\n\tconstructor(level: LogLevel = LogLevel.Info) {\r\n\t\tthis.level = level;\r\n\t}\r\n\r\n\tpublic level: LogLevel;\r\n\tprivate colors = [red, yellow, blue, magenta, green];\r\n\r\n\temit(message: any, level: LevelStrings | LogLevel = LogLevel.Info) {\r\n\t\tif (typeof level == 'string') level = LogLevel[level];\r\n\t\tif (level > this.level) return;\r\n\t\tconsole.log(this.colors[level](`[${LogLevel[level]}]`), message.toString());\r\n\t}\r\n}\r\n","import * as fs from 'fs';\r\nimport path from 'path';\r\nimport {\r\n\tClient,\r\n\tClientOptions,\r\n\tClientUser,\r\n\tCollection,\r\n\tMessage,\r\n\tPartialMessage,\r\n\tSnowflake,\r\n} from 'discord.js';\r\nimport { Command } from './Command';\r\nimport { Logger, LogLevel } from './Logger';\r\nimport { Event } from './Event';\r\n\r\ninterface _BotOptions extends ClientOptions {\r\n\tcommandFolder: string;\r\n\teventFolder: string;\r\n\tlogLevel?: LogLevel;\r\n}\r\n\r\nexport class BotClass extends Client {\r\n\tconstructor(prefix: string, token: string, owners: Snowflake[], options: _BotOptions) {\r\n\t\tsuper(options);\r\n\t\tthis.logger = new Logger(options.logLevel);\r\n\t\tthis.prefix = prefix;\r\n\t\tthis.token = token;\r\n\t\tthis.owners = owners;\r\n\t\tthis.commandFolder = path.resolve(options.commandFolder);\r\n\t\tthis.eventFolder = path.resolve(options.eventFolder);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tprefix: string;\r\n\ttoken: string;\r\n\tlogger: Logger;\r\n\tuser!: ClientUser;\r\n\tprivate owners: Snowflake[];\r\n\tprivate commands: Collection<string, Command> = new Collection();\r\n\tprivate events: Collection<string, Event> = new Collection();\r\n\tprotected readonly commandFolder: string;\r\n\tprotected readonly eventFolder: string;\r\n\r\n\tasync init() {\r\n\t\ttry {\r\n\t\t\tawait this.registerCommands();\r\n\t\t\tawait this.eventDispatcher();\r\n\t\t\tthis.on('message', message => this.commandDispatcher(message));\r\n\t\t\tthis.on('messageUpdate', message => this.commandDispatcher(message));\r\n\t\t\tawait this.login(this.token);\r\n\r\n\t\t\tsetInterval(() => {\r\n\t\t\t\tthis.logger.emit(`[ws] Heartbeat ping: ${this.ws.ping}`);\r\n\t\t\t}, 30000);\r\n\t\t} catch (error) {\r\n\t\t\tthrow this.logger.emit(\r\n\t\t\t\t`Uncaught error while attempting init sequence: \\n${error}`,\r\n\t\t\t\tLogLevel.Error\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tasync registerCommands() {\r\n\t\tconst commandFiles = fs.readdirSync(this.commandFolder).filter(file => file.endsWith('.js'));\r\n\t\tthis.logger.emit(`commandfiles = ${commandFiles}`, LogLevel.Verbose);\r\n\r\n\t\tfor (const file of commandFiles) {\r\n\t\t\tconst fullPath = path.resolve(path.join(this.commandFolder, file));\r\n\t\t\tthis.logger.emit(`fullPath = ${fullPath}`, LogLevel.Verbose);\r\n\t\t\tthis.logger.emit(`Attempting to register commands in ${fullPath}`, LogLevel.Debug);\r\n\t\t\tlet command!: Command;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tcommand = new (await import(fullPath)).default(this);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.logger.emit(`Error while registering commands: \\n${error}`, LogLevel.Error);\r\n\t\t\t}\r\n\r\n\t\t\tthis.logger.emit(`command = ${command.name}`, LogLevel.Verbose);\r\n\t\t\tthis.commands.set(command.name, command);\r\n\r\n\t\t\tcommand.aliases?.forEach((alias: string) => {\r\n\t\t\t\t/* Clone command without using slow Object.setPrototypeOf()\r\n\t\t\t\tThis isn't clean but registers aliases as first-class commands,\r\n\t\t\t\tsimplifying the command search in the dispatcher */\r\n\t\t\t\tconst newCmd = Object.assign(Object.create(Object.getPrototypeOf(command)), command);\r\n\t\t\t\tnewCmd.name = alias;\r\n\t\t\t\tthis.commands.set(alias, newCmd);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync eventDispatcher() {\r\n\t\tconst eventFiles = fs.readdirSync(this.eventFolder).filter(file => file.endsWith('.js'));\r\n\r\n\t\tfor (const file of eventFiles) {\r\n\t\t\tconst fullPath = path.resolve(path.join(this.eventFolder, file));\r\n\t\t\tconst event = new (await import(fullPath)).default(this);\r\n\t\t\tconst eName: string = event.name || file;\r\n\t\t\tconst once: boolean = event.once;\r\n\r\n\t\t\tthis[once ? 'once' : 'on'](eName, (...args) => {\r\n\t\t\t\tevent.run(...args);\r\n\t\t\t\tthis.logger.emit(`dispatched event with name ${eName}`, LogLevel.Debug);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync commandDispatcher(message: Message | PartialMessage) {\r\n\t\tif (\r\n\t\t\tmessage.partial ||\r\n\t\t\t!message.content.startsWith(this.prefix) ||\r\n\t\t\tmessage.content.length < this.prefix.length ||\r\n\t\t\tmessage.author.bot\r\n\t\t)\r\n\t\t\treturn;\r\n\r\n\t\tconst args = message.content.slice(this.prefix.length).split(' ');\r\n\t\tconst command = args.shift()?.toLowerCase() as string;\r\n\t\tif (!this.commands.has(command)) return;\r\n\r\n\t\tif (command === 'reload') {\r\n\t\t\tawait this.registerCommands();\r\n\t\t\tmessage.reply('reloaded');\r\n\t\t} else if (command === 'unload') {\r\n\t\t\tconst hasCmd = this.commands.has(args[0]);\r\n\t\t\tthis.logger.emit(`hasCmd ${hasCmd}`, LogLevel.Verbose);\r\n\t\t\tif (!hasCmd) return;\r\n\t\t\tthis.commands.delete(args[0]);\r\n\t\t\tthis.logger.emit(Array.from(this.commands.keys()).toString(), LogLevel.Verbose);\r\n\t\t\tmessage.reply('unloaded');\r\n\t\t} else if (command === 'reinit') {\r\n\t\t\tawait this.init();\r\n\t\t\tmessage.reply('reinit');\r\n\t\t}\r\n\r\n\t\tthis.logger.emit(\r\n\t\t\t`commandKeys = ${Array.from(this.commands.keys())\r\n\t\t\t\t.join(', ')\r\n\t\t\t\t.toString()}`,\r\n\t\t\tLogLevel.Verbose\r\n\t\t);\r\n\r\n\t\t// Simpler search mentioned in registerCommands()\r\n\t\tconst cmd = this.commands.find(cmd => cmd.name === command);\r\n\t\tif (!cmd)\r\n\t\t\tthrow this.logger.emit(`Could not find command with name ${command}`, LogLevel.Warning);\r\n\r\n\t\tif (cmd.ownerOnly && !this.owners.includes(message.author.id)) return;\r\n\t\tcmd.run(message, args);\r\n\t\tthis.logger.emit(`dispatched command with name ${cmd.name}`, LogLevel.Debug);\r\n\t}\r\n}\r\n","import { Message } from 'discord.js';\r\nimport { BotClass } from './BotClass';\r\n\r\nexport abstract class Command {\r\n\tconstructor(client: BotClass) {\r\n\t\tthis.client = client;\r\n\t}\r\n\r\n\tclient!: BotClass;\r\n\tabstract name: string;\r\n\taliases?: string[];\r\n\townerOnly?: boolean = false;\r\n\tabstract description: string;\r\n\tabstract run(message: Message, args: string[]): Promise<Message | void> | void;\r\n\tprotected shouldHandle = true;\r\n}\r\n","import { BotClass } from './BotClass';\n\nexport abstract class Event {\n\tconstructor(client: BotClass) {\n\t\tthis.client = client;\n\t}\n\n\tclient: BotClass;\n\tonce: boolean = false;\n\tabstract name: string;\n\tabstract run(...args: any[]): void;\n}\n"],"names":["red","yellow","blue","magenta","green","pkg","LogLevel","Logger","constructor","level","Info","emit","message","console","log","colors","toString","BotClass","Client","prefix","token","owners","options","Collection","logger","logLevel","commandFolder","path","resolve","eventFolder","init","registerCommands","eventDispatcher","on","commandDispatcher","login","setInterval","ws","ping","error","Error","commandFiles","fs","filter","file","endsWith","Verbose","fullPath","join","Debug","command","default","name","commands","set","aliases","forEach","alias","newCmd","Object","assign","create","getPrototypeOf","eventFiles","event","eName","once","args","run","partial","content","startsWith","length","author","bot","slice","split","shift","toLowerCase","has","reply","hasCmd","delete","Array","from","keys","cmd","find","Warning","ownerOnly","includes","id","Command","client","Event"],"mappings":"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"}