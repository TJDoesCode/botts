!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("fs"),require("path"),require("discord.js"),require("chalk")):"function"==typeof define&&define.amd?define(["exports","fs","path","discord.js","chalk"],t):t((e=e||self)["@tjdoescode/botts"]={},e.fs,e.path,e.discord_js,e.pkg)}(this,(function(e,t,o,s,i){"use strict";o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o,i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i;const{red:n,yellow:r,blue:a,magenta:l,green:c}=i;var h;(h=e.LogLevel||(e.LogLevel={}))[h.Error=0]="Error",h[h.Warning=1]="Warning",h[h.Info=2]="Info",h[h.Debug=3]="Debug",h[h.Verbose=4]="Verbose";class m{constructor(t=e.LogLevel.Info){this.colors=[n,r,a,l,c],this.level=t}emit(t,o=e.LogLevel.Info){"string"==typeof o&&(o=e.LogLevel[o]),o>this.level||console.log(this.colors[o](`[${e.LogLevel[o]}]`),t.toString())}}e.BotClass=class extends s.Client{constructor(e,t,i,n){super(n),this.commands=new s.Collection,this.events=new s.Collection,this.logger=new m(n.logLevel),this.prefix=e,this.token=t,this.owners=i,this.commandFolder=o.resolve(n.commandFolder),this.eventFolder=o.resolve(n.eventFolder),this.init()}async init(){try{await this.registerCommands(),await this.eventDispatcher(),this.on("message",e=>this.commandDispatcher(e)),this.on("messageUpdate",e=>this.commandDispatcher(e)),await this.login(this.token),setInterval(()=>{this.logger.emit("[ws] Heartbeat ping: "+this.ws.ping)},3e4)}catch(t){throw this.logger.emit("Uncaught error while attempting init sequence: \n"+t,e.LogLevel.Error)}}async registerCommands(){const s=t.readdirSync(this.commandFolder).filter(e=>e.endsWith(".js"));this.logger.emit("commandfiles = "+s,e.LogLevel.Verbose);for(const t of s){var i;const s=o.resolve(o.join(this.commandFolder,t));let n;this.logger.emit("fullPath = "+s,e.LogLevel.Verbose),this.logger.emit("Attempting to register commands in "+s,e.LogLevel.Debug);try{n=new((await import(s)).default)(this)}catch(t){this.logger.emit("Error while registering commands: \n"+t,e.LogLevel.Error)}this.logger.emit("command = "+n.name,e.LogLevel.Verbose),this.commands.set(n.name,n),null==(i=n.aliases)||i.forEach(e=>{const t=Object.assign(Object.create(Object.getPrototypeOf(n)),n);t.name=e,this.commands.set(e,t)})}}async eventDispatcher(){const s=t.readdirSync(this.eventFolder).filter(e=>e.endsWith(".js"));for(const t of s){const s=o.resolve(o.join(this.eventFolder,t)),i=new((await import(s)).default)(this),n=i.name||t;this[i.once?"once":"on"](n,(...t)=>{i.run(...t),this.logger.emit("dispatched event with name "+n,e.LogLevel.Debug)})}}async commandDispatcher(t){var o;if(t.partial||!t.content.startsWith(this.prefix)||t.content.length<this.prefix.length||t.author.bot)return;const s=t.content.slice(this.prefix.length).split(" "),i=null==(o=s.shift())?void 0:o.toLowerCase();if(!this.commands.has(i))return;if("reload"===i)await this.registerCommands(),t.reply("reloaded");else if("unload"===i){const o=this.commands.has(s[0]);if(this.logger.emit("hasCmd "+o,e.LogLevel.Verbose),!o)return;this.commands.delete(s[0]),this.logger.emit(Array.from(this.commands.keys()).toString(),e.LogLevel.Verbose),t.reply("unloaded")}else"reinit"===i&&(await this.init(),t.reply("reinit"));this.logger.emit("commandKeys = "+Array.from(this.commands.keys()).join(", ").toString(),e.LogLevel.Verbose);const n=this.commands.find(e=>e.name===i);if(!n)throw this.logger.emit("Could not find command with name "+i,e.LogLevel.Warning);n.ownerOnly&&!this.owners.includes(t.author.id)||(n.run(t,s),this.logger.emit("dispatched command with name "+n.name,e.LogLevel.Debug))}},e.Command=class{constructor(e){this.ownerOnly=!1,this.shouldHandle=!0,this.client=e}},e.Event=class{constructor(e){this.once=!1,this.client=e}},e.Logger=m,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=botts.umd.production.min.js.map
