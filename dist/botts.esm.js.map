{"version":3,"file":"botts.esm.js","sources":["../src/structures/Logger.ts","../src/structures/BotClass.ts","../src/structures/Command.ts","../src/structures/Event.ts"],"sourcesContent":["import pkg from 'chalk';\r\nconst { red, yellow, blue, magenta, green } = pkg;\r\n\r\nexport enum LogLevel {\r\n\tError = 0,\r\n\tWarning,\r\n\tInfo,\r\n\tDebug,\r\n\tVerbose,\r\n}\r\n\r\ntype LevelStrings = keyof typeof LogLevel;\r\n\r\nexport class Logger {\r\n\tconstructor(level: LogLevel = LogLevel.Info) {\r\n\t\tthis.level = level;\r\n\t}\r\n\r\n\tpublic level: LogLevel;\r\n\tprivate colors = [red, yellow, blue, magenta, green];\r\n\r\n\temit(message: any, level: LevelStrings | LogLevel = LogLevel.Info) {\r\n\t\tif (typeof level == 'string') level = LogLevel[level];\r\n\t\tif (level > this.level) return;\r\n\t\tconsole.log(this.colors[level](`[${LogLevel[level]}]`), message.toString());\r\n\t}\r\n}\r\n","import * as fs from 'fs';\nimport path from 'path';\nimport {\n\tClient,\n\tClientOptions,\n\tClientUser,\n\tCollection,\n\tMessage,\n\tPartialMessage,\n\tSnowflake,\n} from 'discord.js';\nimport { Command } from './Command';\nimport { Logger, LogLevel } from './Logger';\nimport { Event } from './Event';\n\ninterface _BotOptions extends ClientOptions {\n\tcommandFolder: string;\n\teventFolder: string;\n\tlogLevel?: LogLevel;\n}\n\nexport class BotClass extends Client {\n\tconstructor(prefix: string, token: string, owners: Snowflake[], options: _BotOptions) {\n\t\tsuper(options);\n\t\tthis.logger = new Logger(options.logLevel);\n\t\tthis.prefix = prefix;\n\t\tthis.token = token;\n\t\tthis.owners = owners;\n\t\tthis.commandFolder = path.resolve(options.commandFolder);\n\t\tthis.eventFolder = path.resolve(options.eventFolder);\n\t\tthis.init();\n\t}\n\n\tprefix: string;\n\ttoken: string;\n\tlogger: Logger;\n\tuser!: ClientUser;\n\tprivate owners: Snowflake[];\n\tprivate commands: Collection<string, Command> = new Collection();\n\tprivate events: Collection<string, Event> = new Collection();\n\tprotected readonly commandFolder: string;\n\tprotected readonly eventFolder: string;\n\n\tasync init() {\n\t\ttry {\n\t\t\tawait this.registerCommands();\n\t\t\tawait this.eventDispatcher();\n\t\t\tthis.on('message', message => this.commandDispatcher(message));\n\t\t\tthis.on('messageUpdate', message => this.commandDispatcher(message));\n\t\t\tawait this.login(this.token);\n\n\t\t\tsetInterval(() => {\n\t\t\t\tthis.logger.emit(`[ws] Heartbeat ping: ${this.ws.ping}`);\n\t\t\t}, 30000);\n\t\t} catch (error) {\n\t\t\tthrow this.logger.emit(\n\t\t\t\t`Uncaught error while attempting init sequence: \\n${error.stack ?? error}`,\n\t\t\t\tLogLevel.Error\n\t\t\t);\n\t\t}\n\t}\n\n\tasync registerCommands() {\n\t\tconst commandFiles = fs.readdirSync(this.commandFolder).filter(file => file.endsWith('.js'));\n\t\tthis.logger.emit(`commandfiles = ${commandFiles}`, LogLevel.Verbose);\n\n\t\tfor (const file of commandFiles) {\n\t\t\tconst fullPath = path.resolve(path.join(this.commandFolder, file));\n\t\t\tthis.logger.emit(`fullPath = ${fullPath}`, LogLevel.Verbose);\n\t\t\tthis.logger.emit(`Attempting to register commands in ${fullPath}`, LogLevel.Debug);\n\t\t\tlet command!: Command;\n\n\t\t\ttry {\n\t\t\t\tcommand = new (await import(fullPath)).default(this);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logger.emit(\n\t\t\t\t\t`Error while registering commands: \\n${error.stack ?? error}`,\n\t\t\t\t\tLogLevel.Error\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.logger.emit(`command = ${command.name}`, LogLevel.Verbose);\n\t\t\tthis.commands.set(command.name, command);\n\n\t\t\tcommand.aliases?.forEach((alias: string) => {\n\t\t\t\t/* Clone command without using slow Object.setPrototypeOf()\n\t\t\t\tThis isn't clean but registers aliases as first-class commands,\n\t\t\t\tsimplifying the command search in the dispatcher */\n\t\t\t\tconst newCmd = Object.assign(Object.create(Object.getPrototypeOf(command)), command);\n\t\t\t\tnewCmd.name = alias;\n\t\t\t\tthis.commands.set(alias, newCmd);\n\t\t\t});\n\t\t}\n\t}\n\n\tasync eventDispatcher() {\n\t\tconst eventFiles = fs.readdirSync(this.eventFolder).filter(file => file.endsWith('.js'));\n\n\t\tfor (const file of eventFiles) {\n\t\t\tconst fullPath = path.resolve(path.join(this.eventFolder, file));\n\t\t\tconst event = new (await import(fullPath)).default(this);\n\t\t\tconst eName: string = event.name || file;\n\t\t\tconst once: boolean = event.once;\n\n\t\t\tthis[once ? 'once' : 'on'](eName, (...args) => {\n\t\t\t\tevent.run(...args);\n\t\t\t\tthis.logger.emit(`dispatched event with name ${eName}`, LogLevel.Debug);\n\t\t\t});\n\t\t}\n\t}\n\n\tasync commandDispatcher(message: Message | PartialMessage) {\n\t\tif (\n\t\t\tmessage.partial ||\n\t\t\t!message.content.startsWith(this.prefix) ||\n\t\t\tmessage.content.length < this.prefix.length ||\n\t\t\tmessage.author.bot\n\t\t)\n\t\t\treturn;\n\n\t\tconst args = message.content.slice(this.prefix.length).split(' ');\n\t\tconst command = args.shift()?.toLowerCase() as string;\n\t\tif (!this.commands.has(command)) return;\n\n\t\tif (command === 'reload') {\n\t\t\tawait this.registerCommands();\n\t\t\tmessage.reply('reloaded');\n\t\t} else if (command === 'unload') {\n\t\t\tconst hasCmd = this.commands.has(args[0]);\n\t\t\tthis.logger.emit(`hasCmd ${hasCmd}`, LogLevel.Verbose);\n\t\t\tif (!hasCmd) return;\n\t\t\tthis.commands.delete(args[0]);\n\t\t\tthis.logger.emit(Array.from(this.commands.keys()).toString(), LogLevel.Verbose);\n\t\t\tmessage.reply('unloaded');\n\t\t} else if (command === 'reinit') {\n\t\t\tawait this.init();\n\t\t\tmessage.reply('reinit');\n\t\t}\n\n\t\tthis.logger.emit(\n\t\t\t`commandKeys = ${Array.from(this.commands.keys())\n\t\t\t\t.join(', ')\n\t\t\t\t.toString()}`,\n\t\t\tLogLevel.Verbose\n\t\t);\n\n\t\t// Simpler search mentioned in registerCommands()\n\t\tconst cmd = this.commands.find(cmd => cmd.name === command);\n\t\tif (!cmd)\n\t\t\tthrow this.logger.emit(`Could not find command with name ${command}`, LogLevel.Warning);\n\n\t\tif (cmd.ownerOnly && !this.owners.includes(message.author.id)) return;\n\t\tcmd.run(message, args);\n\t\tthis.logger.emit(`dispatched command with name ${cmd.name}`, LogLevel.Debug);\n\t}\n}\n","import { Message } from 'discord.js';\r\nimport { BotClass } from './BotClass';\r\n\r\nexport abstract class Command {\r\n\tconstructor(client: BotClass) {\r\n\t\tthis.client = client;\r\n\t}\r\n\r\n\tclient!: BotClass;\r\n\tabstract name: string;\r\n\taliases?: string[];\r\n\townerOnly?: boolean = false;\r\n\tabstract description: string;\r\n\tabstract run(message: Message, args: string[]): Promise<Message | void> | void;\r\n\tprotected shouldHandle = true;\r\n}\r\n","import { BotClass } from './BotClass';\n\nexport abstract class Event {\n\tconstructor(client: BotClass) {\n\t\tthis.client = client;\n\t}\n\n\tclient: BotClass;\n\tonce: boolean = false;\n\tabstract name: string;\n\tabstract run(...args: any[]): void;\n}\n"],"names":["red","yellow","blue","magenta","green","pkg","LogLevel","Logger","constructor","level","Info","emit","message","console","log","colors","toString","BotClass","Client","prefix","token","owners","options","Collection","logger","logLevel","commandFolder","path","resolve","eventFolder","init","registerCommands","eventDispatcher","on","commandDispatcher","login","setInterval","ws","ping","error","stack","Error","commandFiles","fs","filter","file","endsWith","Verbose","fullPath","join","Debug","command","default","name","commands","set","aliases","forEach","alias","newCmd","Object","assign","create","getPrototypeOf","eventFiles","event","eName","once","args","run","partial","content","startsWith","length","author","bot","slice","split","shift","toLowerCase","has","reply","hasCmd","delete","Array","from","keys","cmd","find","Warning","ownerOnly","includes","id","Command","client","Event"],"mappings":"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"}